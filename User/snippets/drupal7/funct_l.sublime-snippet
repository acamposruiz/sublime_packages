<snippet>
	<content><![CDATA[
l(${1:text}, ${2:path}, array(
  'attributes' => array(
    'id' => '${3:id name}',
    'class' => '${4:class name}',
    'style' => '${5:style name}'
  ),
  'html' => ${6:TRUE - FALSE},
  'language' => ${7:value},
  'query' => array(${8:value}), // An array of query key/value-pairs (without any URL-encoding) to append to the URL.
  'fragment' => ${9:value}, // A fragment identifier (named anchor) to append to the URL. Do not include the leading '#' character.
  'absolute' => array(${10:TRUE - FALSE}),
  'alias' => array(${11:TRUE - FALSE}), // Defaults to FALSE. Whether the given path is a URL alias already.
  'external' => array(${12:TRUE - FALSE}),
  'https' => array(${13:TRUE - FALSE}), // Whether this URL should point to a secure location. If not defined, the current scheme is used, so the user stays on HTTP or HTTPS respectively. TRUE enforces HTTPS and FALSE enforces HTTP, but HTTPS can only be enforced when the variable 'https' is set to TRUE.
  'base_url' => array(${14:value}), // Only used internally, to modify the base URL when a language dependent URL requires so.
  'prefix' => array(${15:value}),
  'script' => array(${16:value}), // The script filename in Drupal's root directory to use when clean URLs are disabled, such as 'index.php'. Defaults to an empty string, as most modern web servers automatically find 'index.php'. If clean URLs are disabled, the value of $path is appended as query parameter 'q' to $options['script'] in the returned URL. When deploying Drupal on a web server that cannot be configured to automatically find index.php, then hook_url_outbound_alter() can be implemented to force this value to 'index.php'.
  'entity_type' => array(${17:value}), // Only set if url() is invoked by entity_uri().
  'entity' => array(${18:value}), // The entity object (such as a node) for which the URL is being generated. Only set if url() is invoked by entity_uri().
));
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<!-- <tabTrigger>hello</tabTrigger> -->
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<!-- <scope>source.python</scope> -->
	<tabTrigger>dr7_func_l</tabTrigger>
	<description>function l</description>
</snippet>
